import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as e}from"./app-D_aip97M.js";const l={};function t(p,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="配方过滤器" tabindex="-1"><a class="header-anchor" href="#配方过滤器"><span>配方过滤器</span></a></h1><p>配方过滤器用于筛选合成台包含的配方，以便于玩家在合成台中只看到某些特定配方。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>过滤器检索的字段是配方的完整id字符串，比如<code>tutorial:gun/ak47</code>。</p></div><h2 id="定义一个配方过滤器" tabindex="-1"><a class="header-anchor" href="#定义一个配方过滤器"><span>定义一个配方过滤器</span></a></h2><p>配方过滤器位于<code>data/&lt;namespace&gt;/recipe_filters/</code>目录下，他的文件路径也决定了过滤器的ID。</p><p>作为示例，此处创建了一个id为<code>tutorial:example</code>的过滤器，参考位置如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>└─tutorial_gun_pack  </span></span>
<span class="line"><span>    ├─data</span></span>
<span class="line"><span>    │   └─tutorial</span></span>
<span class="line"><span>    │       ├─data</span></span>
<span class="line"><span>    │       ├─index</span></span>
<span class="line"><span>    │       ├─recipe_filters    # 配方过滤器目录</span></span>
<span class="line"><span>    │       │  └─example.json   # 过滤器文件</span></span>
<span class="line"><span>    │       └─recipes</span></span>
<span class="line"><span>    └─gunpack.meta.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体内容如下：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 白名单，只有在白名单中的配方才会被显示，如果白名单为空，默认为全集</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 可以使用正则表达式，正则表达式请以^开头，$结尾</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 常用例子：匹配命名空间xxx下的所有配方：^xxx:.*$</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;whitelist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;^.*$&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 黑名单，在白名单中的配方中，如果在黑名单中，则不会被显示</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;blacklist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;tacz:test&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用配方过滤器过滤配方" tabindex="-1"><a class="header-anchor" href="#使用配方过滤器过滤配方"><span>使用配方过滤器过滤配方</span></a></h2><p>配方过滤器采用黑白名单的方式筛选配方，只有满足白名单中任一条件且不满足黑名单中全部条件的配方才视为满足过滤器的条件。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果白名单字段为空或缺省，则白名单的范围默认是全集。</p></div><p>黑白名单都由一个数组构成，其中每个元素代表一个匹配项，<strong>以^开头，$结尾</strong> 的字符串为正则表达式，其他的则匹配一个单独的id。</p><h2 id="修改其他枪包的配方过滤器" tabindex="-1"><a class="header-anchor" href="#修改其他枪包的配方过滤器"><span>修改其他枪包的配方过滤器</span></a></h2><p>有时候，你可能想让你的枪包配方只在你自己的工作台中显示，把特定配方从其他的工作台中移除。</p><p>于是，配方过滤器提供了一个特别的特性，即类似tag，所有枪包中定义的相同id的配方过滤器将被合并而不是覆盖。<br> 简而言之，只要在你的枪包的相同位置也放置一份相同id的配方过滤器，你的配方将会被合并到其他枪包的配方过滤器中。</p><p>举个例子，我们想把所有以<code>tutorial</code>为命名空间的配方从tacz的默认工作台中移除，那么我们只需在自己的枪包中<code>data/tacz/recipe_filters/default.json</code> 的位置也放置一个配方过滤器并增加一条黑名单，就像这样：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;blacklist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;^tutorial:.*$&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么，这条黑名单就会被合并到tacz的默认工作台的配方过滤器的黑名单中，从而达到我们的目的。</p>`,19)]))}const h=i(l,[["render",t]]),c=JSON.parse('{"path":"/zh/gunpack/block/03_recipe_filter.html","title":"配方过滤器","lang":"zh-CN","frontmatter":{"order":3},"git":{},"readingTime":{"minutes":2.23,"words":668},"filePathRelative":"zh/gunpack/block/03_recipe_filter.md","excerpt":"\\n<p>配方过滤器用于筛选合成台包含的配方，以便于玩家在合成台中只看到某些特定配方。</p>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>过滤器检索的字段是配方的完整id字符串，比如<code>tutorial:gun/ak47</code>。</p>\\n</div>\\n<h2>定义一个配方过滤器</h2>\\n<p>配方过滤器位于<code>data/&lt;namespace&gt;/recipe_filters/</code>目录下，他的文件路径也决定了过滤器的ID。</p>\\n<p>作为示例，此处创建了一个id为<code>tutorial:example</code>的过滤器，参考位置如下：</p>"}');export{h as comp,c as data};
