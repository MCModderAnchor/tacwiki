import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as t}from"./app-D_aip97M.js";const s="/gunpack/gun/handpos/lefthand_pos.png",d="/gunpack/gun/handpos/lefthand_pos_rot.png",p="/gunpack/gun/handpos/righthand_pos.png",c="/gunpack/gun/handpos/hand_pose.png",i="/gunpack/gun/handpos/gun_and_hand.png",h="/gunpack/gun/handpos/in_game.png",r={};function _(l,n){return t(),a("div",null,n[0]||(n[0]=[e('<h1 id="手臂定位组" tabindex="-1"><a class="header-anchor" href="#手臂定位组"><span>手臂定位组</span></a></h1><p>手臂定位组是包含在枪械模型中的两个定位组，分别名为 <code>lefthand_pos</code>(左手定位组) 和 <code>righthand_pos</code>(右手定位组)。</p><h2 id="放置预览用手部模型" tabindex="-1"><a class="header-anchor" href="#放置预览用手部模型"><span>放置预览用手部模型</span></a></h2><p>手部模型的渲染是程序中自动完成的。如果我们想在 BlockBench 中预览手部模型的渲染结果，你需要按照固定的方式在手臂定位组中添加模型。</p><h3 id="steve-手臂预览模型" tabindex="-1"><a class="header-anchor" href="#steve-手臂预览模型"><span>Steve 手臂预览模型</span></a></h3><p>我们先将<code>lefthand_pos</code>定位组的<code>Pivot Point</code>(枢轴点)置于 (0, 0, 0)，然后向其中添加一个方块，手动输入方块的各个数据， 其中，<code>Position</code> 为 (4, 0, -2)，<code>Size</code> 为 (4, 12, 4)。<br> 如图所示:<br><img src="'+s+'" alt="Left Hand Pos"><br> 最后移动、旋转整个组到合适的位置。<br> 如下图经过位移和旋转后，手臂预览模型的 <code>Position</code> 数值 为 (7, 0, -2) , 与 <code>lefthand_pos</code> 组的 Pivot Point 相对值仍然保持 (+4, +0, -2)。<br><img src="'+d+'" alt="Left Hand Pos Rot"></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>用一句话来概括，其实就是: 保证用于预览的手臂方块的 <code>Size</code> 值固定为 (4, 12, 4)，且 Pivot Point 数值 为 lefthand_pos 的 Pivot Point 数值的 (+4, +0, -2)。</p></div><p>righthand_pos 的放置方式与 lefthand_pos 类似，不同的是，方块的 Position 值改为 (-8, 0, -2)，即与 righthand_pos 分组的 Pivot Point 相对值固定为 (-8, +0, -2)。<br> 如图所示:<br><img src="'+p+'" alt="Right Hand Pos"></p><h3 id="alex-手臂预览模型" tabindex="-1"><a class="header-anchor" href="#alex-手臂预览模型"><span>Alex 手臂预览模型</span></a></h3><p>Alex 手臂模型与 Steve 类似，但方块参数需要更改:<br> 左手的 Position 不变，Size 改为 (3, 12, 4)， 右手的 Position 改为 (-7, 0, -2)， Size 改为 (3, 12， 4)。</p><h3 id="手臂朝向" tabindex="-1"><a class="header-anchor" href="#手臂朝向"><span>手臂朝向</span></a></h3><p>如果你按照教程的上述步骤放置手臂预览模型，在未经过位移和旋转的情况下，模型的上端对应手掌和手指，且掌心相对。也就是大拇指朝向 z 轴负方向(北)。<br><img src="'+c+'" alt="Hand Pose"></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>手臂预览模型无需删除，因为在实际渲染时，手臂定位组内的任何模型都不会实际渲染，而是会直接替换成玩家手部模型。</p></div><h2 id="为教程枪添加手臂定位组" tabindex="-1"><a class="header-anchor" href="#为教程枪添加手臂定位组"><span>为教程枪添加手臂定位组</span></a></h2><p><img src="'+i+'" alt="Hand And Gun"><br><img src="'+h+'" alt="In Game"></p>',15)]))}const m=o(r,[["render",_]]),P=JSON.parse('{"path":"/zh/gunpack/gun/04_hand_pos.html","title":"手臂定位组","lang":"zh-CN","frontmatter":{"order":4},"git":{},"readingTime":{"minutes":1.76,"words":527},"filePathRelative":"zh/gunpack/gun/04_hand_pos.md","excerpt":"\\n<p>手臂定位组是包含在枪械模型中的两个定位组，分别名为 <code>lefthand_pos</code>(左手定位组) 和 <code>righthand_pos</code>(右手定位组)。</p>\\n<h2>放置预览用手部模型</h2>\\n<p>手部模型的渲染是程序中自动完成的。如果我们想在 BlockBench 中预览手部模型的渲染结果，你需要按照固定的方式在手臂定位组中添加模型。</p>\\n<h3>Steve 手臂预览模型</h3>\\n<p>我们先将<code>lefthand_pos</code>定位组的<code>Pivot Point</code>(枢轴点)置于 (0, 0, 0)，然后向其中添加一个方块，手动输入方块的各个数据，\\n其中，<code>Position</code> 为 (4, 0, -2)，<code>Size</code> 为 (4, 12, 4)。<br>\\n如图所示:<br>\\n<img src=\\"/gunpack/gun/handpos/lefthand_pos.png\\" alt=\\"Left Hand Pos\\"><br>\\n最后移动、旋转整个组到合适的位置。<br>\\n如下图经过位移和旋转后，手臂预览模型的 <code>Position</code> 数值 为 (7, 0, -2) , 与 <code>lefthand_pos</code> 组的 Pivot Point 相对值仍然保持  (+4, +0, -2)。<br>\\n<img src=\\"/gunpack/gun/handpos/lefthand_pos_rot.png\\" alt=\\"Left Hand Pos Rot\\"></p>"}');export{m as comp,P as data};
